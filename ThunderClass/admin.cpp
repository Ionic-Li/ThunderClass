/*************************************************************************
【文件名】admin.cpp
【功能模块和目的】管理员类定义
【开发者及日期】范静涛(fanjingtao@tsinghua.edu.cn) 2020-5-10
【版权信息】开发者范静涛(fanjingtao@tsinghua.edu.cn)声明放弃任何版权诉求，任何使用者可做出任何修改、用于任何目的
【更改记录】
	2020-5-15 由范静涛增加注释
	2020/6/15 由李永健增加用户名密码过长的错误抛出
*************************************************************************/

#include "admin.h"
#include <stdexcept>

/*************************************************************************
【函数名称】Admin::Admin
【函数功能】管理员类私有构造函数，不允许在类外显性构造管理员对象（友元User类除外）
【参数】无
【返回值】构造函数不可有返回值
【开发者及日期】范静涛(fanjingtao@tsinghua.edu.cn) 2020-5-10
【更改记录】2020-5-15 由范静涛增加注释
*************************************************************************/
Admin::Admin():User("Admin", "Admin", "Admin") {
    //只起到间接调用基类构造函数的作用
}

/*************************************************************************
【函数名称】Admin::AddUser
【函数功能】按用户名、密码、用户类型新增一个用户对象，对象的指针保存在基类User的静态对象vector<User*> UserList中
【参数】三个参数均为输入参数，分别为用户名、密码、类型（Admin、Teacher、Student三者之一）
【返回值】true表示新增成功，false表示新增失败
【开发者及日期】范静涛(fanjingtao@tsinghua.edu.cn) 2020-5-10
【更改记录】
	2020-5-15 由范静涛增加注释
	2020/6/15 由李永健增加用户名密码过长的错误抛出
*************************************************************************/
bool Admin::AddUser(const string& Name, const string& Password, const string& Type){
	if (Name.length() > 20 || Password.length() > 20)
	{
		throw length_error("String too long");//数据过长
	}
    return User::AddUser(Name, Password, Type);
}

/*************************************************************************
【函数名称】       DeleteUser
【函数功能】       删除用户
【参数】           待删除的用户位置
【返回值】         删除成功与否的bool类型
【开发者及日期】   李永健 2020/6/14
【更改记录】       无
*************************************************************************/
bool Admin::DeleteUser(int iNum)
{
	return User::DeleteUser(iNum);
}

/*************************************************************************
【函数名称】       ChangeUser
【函数功能】       更改用户信息
【参数】           待更改的用户的位置，要更改的用户名密码和类型
【返回值】         删除更改与否的bool类型
【开发者及日期】   李永健 2020/6/14
【更改记录】       
	2020/6/15 由李永健增加用户名密码过长的错误抛出
*************************************************************************/
bool Admin::ChangeUser(int iNum, const string& Name, const string& Password, const string& Type)
{
	if (Name.length() > 20 || Password.length() > 20)
	{
		throw length_error("String too long");//数据过长
	}
	return User::ChangeUser(iNum, Name, Password, Type);
}

/*************************************************************************
【函数名称】       GetPassword
【函数功能】       寻找对应用户的密码
【参数】           对应位置
【返回值】         密码
【开发者及日期】   李永健 2020/6/14
【更改记录】       无
*************************************************************************/
string Admin::GetPassword(int iNum)
{
	return User::GetPassword(iNum);
}

/*************************************************************************
【函数名称】       SearchUser
【函数功能】       获取对应用户位置
【参数】           用户名
【返回值】         用户位置
【开发者及日期】   李永健 2020/6/14
【更改记录】       无
*************************************************************************/
int Admin::SearchUser(const string & Name)
{
	return User::SearchUser(Name);
}
